<launch>

    <param name="use_sim_time" type="bool" value="true"/>
    <arg name="gazebo" default="true"/>
    <arg name="xbot2" default="true"/>

    <!-- modular configuration -->
    <arg name="modular_description" default="$(find concert_examples)/pino_6dof.py"/>

    <!-- modular configuration parameters -->
    <arg name="realsense" default="false"/>
    <arg name="velodyne" default="false"/>
    <arg name="use_gpu_ray" default="false"/>

    <!-- gazebo configuration parameters -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="physics" default="ode"/>
    <arg name="verbose" default="false"/>
    <arg name="extra_gazebo_args" default=""/>

    <!-- run rviz ? -->
    <arg name="rviz" default="false"/>


    <!-- Internal arguments, rewrite human-readable gazebo arguments to it's internal arguments -->
    <arg unless="$(arg paused)" name="command_arg1" value=""/>
    <arg if="$(arg paused)" name="command_arg1" value="-u"/>
    <arg unless="$(arg headless)" name="command_arg2" value=""/>
    <arg if="$(arg headless)" name="command_arg2" value="-r"/>
    <arg unless="$(arg verbose)" name="command_arg3" value=""/>
    <arg if="$(arg verbose)" name="command_arg3" value="--verbose"/>
    <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
    <arg if="$(arg debug)" name="script_type" value="debug"/>


    <!-- from where the simulation enviornment will be loaded -->
    <arg name="world_name" default="$(find concert_gazebo)/world/empty_world.sdf"/>


    <!-- Load the URDF/SRDF into the ROS Parameter Server -->
    <param name="robot_description_gz" 
        command="python3 $(arg modular_description) -o urdf 
                                                    -a gazebo_urdf:=true
                                                        realsense:=$(arg realsense)
                                                        velodyne:=$(arg velodyne)
                                                        use_gpu_ray:=$(arg use_gpu_ray)
                                                    -r modularbot_gz"/>

    <param name="robot_description_xbot" 
        command="python3 $(arg modular_description) -o urdf 
                                                    -a gazebo_urdf:=false
                                                        realsense:=$(arg realsense)
                                                        velodyne:=$(arg velodyne)
                                                        use_gpu_ray:=$(arg use_gpu_ray)
                                                    -r modularbot"/>

    <param name="robot_description_semantic" 
        command="python3 $(arg modular_description) -o srdf"/>


    <!-- run gazebo -->
    <group if="$(arg gazebo)">
        <!-- start gazebo server-->
        <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" 
            respawn="false" output="screen" 
            args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name) -namespace ModularBot" />

        <!-- start gazebo client -->
        <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" if="$(arg gui)"/>


        <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model ModularBot -param robot_description_gz"/>

    </group>


    <!-- run xbot2 -->
    <node if="$(arg xbot2)" pkg="concert_xbot2" type="xbot2_core" name="xbot2" output="screen"
        args="--hw sim --simtime --config $(find concert_xbot2)/modular.yaml"/>

    
    <!-- run rviz -->
    <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" output="screen"
        args="-d $(find concert_gazebo)/rviz/concert_sensors.rviz"/>


</launch>